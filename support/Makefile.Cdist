CC = gcc
BUILD ?= debug
CFLAGS = -Wall -Wextra
LDFLAGS = -lm

TARGETS = checkout-stars example
CKS_SOURCES = checkout-stars.c
EX_SOURCES = example.c

CKS_OBJECTS = $(CKS_SOURCES:%.c=%.o)
EX_OBJECTS = $(EX_SOURCES:%.c=%.o)

LIBNAME = novas.a
SOURCES = novas.c novascon.c nutation.c solsys1.c readeph0.c eph_manager.c
OBJECTS = $(SOURCES:%.c=%.o)

# ar r $(LIBNAME) $(OBJECTS)

ifeq ($(BUILD),debug)
CFLAGS += -g
FFLAGS += -g
else
ifeq ($(BUILD),release)
CFLAGS += -O3 -DNDEBUG
FFLAGS += -O3 -DNDEBUG
endif
endif

.PHONY: all clean

all: $(TARGETS)

checkout-stars: $(CKS_OBJECTS) $(LIBNAME)

example: $(EX_OBJECTS) $(LIBNAME)

$(LIBNAME): $(OBJECTS)
	ar r $(LIBNAME) $(OBJECTS)

clean:
	@rm -f $(TARGETS) $(CKS_OBJECTS) $(EX_OBJECTS) \
		$(LIBNAME) $(OBJECTS) $(SOURCES:%.c=%.d) \
		$(CKS_SOURCES:%.c=%.d) $(EX_SOURCES:%.c=%.d)

### Dependencies ###

%.d: %.c
	@set -e; rm -f $@; \
	$(CC) -MM $(CFLAGS) $< > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

ifneq ($(MAKECMDGOALS),clean)
include $(SOURCES:%.c=%.d)
endif

# vim: set noexpandtab tabstop=4 shiftwidth=4 softtabstop=4:
